<Window x:Class="Guess.Yourself.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:l="clr-namespace:Guess.Yourself"
        xmlns:c="clr-namespace:Guess.Yourself.Converters"
        Title="Игра: Угадай себя"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        MinHeight="970"
        MinWidth="840"
        ResizeMode="CanResizeWithGrip"
        Name="GuessYorselfMainWindow" d:DesignWidth="800" d:DesignHeight="700">
    <Window.Resources>
        <c:ActualWidthTriggerToVisibility x:Key="WidthToVisibility"/>
        <c:ActualHeightTriggerToVisibility x:Key="HeihtToVisibility"/>
        <c:ActualHeightTriggerToVisibilityForButton x:Key="HeightToVisibilityButtom"/>
        <c:ActualWidthWindowToVisibilityTextBlock x:Key="WidthWindowToVisibilityTextBlock"/>
        <Style x:Key="CenterDataGridColumnsHeaders" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0, 0, 1, 1"/>
            <Setter Property="Padding" Value="4, 0, 4, 0"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border"
                                BorderThickness="4.6">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.0, 0" EndPoint="0.0, 1">
                                    <GradientStopCollection>
                                        <GradientStop Offset="0" Color="White"/>
                                        <GradientStop Offset="1" Color="SteelBlue"/>
                                    </GradientStopCollection>
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5"/>
                                        <VisualTransition GeneratedDuration="0" To="Pressed"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                            Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="SkyBlue"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                            Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="Beige"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                          Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF70E5"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="EndGame" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border"
                            BorderThickness="1"
                                Padding="2, 10" 
                                Width="155" 
                                Height="50">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.0, 0" EndPoint="0.0, 1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="White"/>
                                            <GradientStop Offset="1" Color="LightSteelBlue"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5"/>
                                        <VisualTransition GeneratedDuration="0" To="Pressed"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="SkyBlue"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="Beige"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF70E5"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ResetGame" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border"
                            BorderThickness="1"
                            Padding="2, 7" Width="160" Height="50">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.0, 0" EndPoint="0.0, 1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="White"/>
                                            <GradientStop Offset="1" Color="LightSteelBlue"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5"/>
                                        <VisualTransition GeneratedDuration="0" To="Pressed"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="SkyBlue"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="Beige"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF70E5"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <!--<Window.DataContext>
        <l:MainWindowViewModel/>
    </Window.DataContext>-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="35*"/>
        </Grid.RowDefinitions>
        <Menu Background="White"
              Name="MenuTriggered">
            <Menu.Resources>
                <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
                    <Setter Property="Template" Value="{StaticResource ResourceKey={x:Static MenuItem.TopLevelItemTemplateKey}}"/>
                    <Setter Property="Padding" Value="10, 3"/>
                </Style>
            </Menu.Resources>
            <MenuItem Header="Файл" Name="File" ItemContainerStyle="{StaticResource MenuItemStyle}">
                <MenuItem.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" Background="{DynamicResource ResourceKey={x:Static SystemColors.MenuBrushKey}}"/>
                    </ItemsPanelTemplate>
                </MenuItem.ItemsPanel>
                <MenuItem Header="Выход" Name="Exitt" Command="{Binding CloseApp}"/>
            </MenuItem>
            <MenuItem Header="Справка" Name="help" ItemContainerStyle="{StaticResource MenuItemStyle}">
                <MenuItem.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" Background="{DynamicResource ResourceKey={x:Static SystemColors.MenuBrushKey}}"/>
                    </ItemsPanelTemplate>
                </MenuItem.ItemsPanel>
                <MenuItem Header="О программе &quot;Угадай себя&quot;" 
                          Name="About"
                          Command="{Binding OpenAboutUs}"/>
            </MenuItem>
        </Menu>
        <TextBlock Text="{Binding IdRemoteStdWinner}" 
                   ClipToBounds="False" 
                   VerticalAlignment="Center" 
                   HorizontalAlignment="Center"
                   Grid.Row="1" 
                   FontSize="30"
                   TextWrapping="Wrap"
                   TextTrimming="CharacterEllipsis">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Panel.ZIndex" Value="0"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Visibility" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource WidthWindowToVisibilityTextBlock}}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsAnimation}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames FillBehavior="Stop"
                                                                      RepeatBehavior="0:0:3"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <ColorAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Black"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.2" Value="Black"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.3" Value="White"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.4" Value="Black"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.5" Value="White"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.6" Value="Black"/>
                                            </ColorAnimationUsingKeyFrames.KeyFrames>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0"
                                                        From="Transparent"
                                                        To="#70d3d3d3"
                                                        Storyboard.TargetProperty="(TextBlock.Background).(SolidColorBrush.Color)"/>
                                        <Int32Animation Duration="0"
                                                        From="0"
                                                        To="1"
                                                        Storyboard.TargetProperty="(Panel.ZIndex)"/>
                                        <Int32Animation Duration="0"
                                                        From="1"
                                                        BeginTime="0:0:3"
                                                        To="0"
                                                        Storyboard.TargetProperty="(Panel.ZIndex)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <!--<DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                                        From="Transparent"
                                                        Storyboard.TargetProperty="(TextBlock.Background).(SolidColorBrush.Color)"/>
                                        <Int32Animation Duration="0"
                                                        From="0"
                                                        Storyboard.TargetProperty="(Panel.ZIndex)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>-->
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsAnimationEndGame}" Value="true">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="Panel.ZIndex" Value="0"/>
                            <Setter Property="Visibility" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource WidthWindowToVisibilityTextBlock}}"/>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames FillBehavior="Stop"
                                                                      RepeatBehavior="0:0:3"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <ColorAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Black"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.2" Value="Black"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.3" Value="White"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.4" Value="Black"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.5" Value="White"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.6" Value="Black"/>
                                            </ColorAnimationUsingKeyFrames.KeyFrames>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0"
                                                        From="Transparent"
                                                        To="#70d3d3d3"
                                                        Storyboard.TargetProperty="(TextBlock.Background).(SolidColorBrush.Color)"/>
                                        <Int32Animation Duration="0"
                                                        From="0"
                                                        To="1"
                                                        Storyboard.TargetProperty="(Panel.ZIndex)"/>
                                        <ColorAnimation Duration="0:0:1"
                                                        From="Black"
                                                        To="Red"
                                                        BeginTime="0:0:3"
                                                        Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0" 
                                                        From="#70d3d3d3"
                                                        To="Transparent"
                                                        Storyboard.TargetProperty="(TextBlock.Background).(SolidColorBrush.Color)"/>
                                        <Int32Animation Duration="0"
                                                        From="1"
                                                        To="0"
                                                        Storyboard.TargetProperty="(Panel.ZIndex)"/>
                                        <ColorAnimation Duration="0"
                                                        From="Red"
                                                        To="White"
                                                        Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <DataGrid Name="TableName"
                  AutoGenerateColumns="False"
                  HeadersVisibility="Column"
                  CanUserAddRows="False"
                  ItemsSource="{Binding Students}"
                  RowHeight="25.8"
                  Grid.Row="1"
                  BorderThickness="0, 1, 0, 0"    
                  VirtualizingPanel.ScrollUnit="Pixel"
                  SelectionMode="Single"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#80CCCCCC"/>
                            <!--<Setter Property="BorderBrush" Value="Black"/>-->
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="IsEnabled" Value="{Binding IsAccess}"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsAccess}" Value="false">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        RepeatBehavior="0:0:2"
                                                        BeginTime="0:0:5.5"
                                                        To="LightCoral"
                                                        Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="Transparent"
                                                        Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsWinner}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:1"
                                                            To="0, 3, 0, 3"
                                                            Storyboard.TargetProperty="BorderThickness"/>
                                        <ColorAnimation Duration="0:0:1"
                                                        To="Red"
                                                        AutoReverse="True"
                                                        RepeatBehavior="0:0:5.5"
                                                        FillBehavior="Stop"
                                                        Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"/>
                                        <ThicknessAnimation Duration="0:0:1"
                                                            From="0, 3, 0, 3" To="0"
                                                            BeginTime="0:0:5.5"
                                                            Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="№ пульта"
                                    HeaderStyle="{StaticResource CenterDataGridColumnsHeaders}"
                                    IsReadOnly="True"
                                    CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Text" Value="{Binding RemoteId}"/>
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding UserAnswer}" Value="NotSet">
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Список объектов"
                                    Width="*"
                                    HeaderStyle="{StaticResource CenterDataGridColumnsHeaders}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Character, UpdateSourceTrigger=PropertyChanged}" 
                                     BorderThickness="0"
                                     TextAlignment="Center"
                                     VerticalContentAlignment="Center"
                                     Background="Transparent"
                                     TextWrapping="Wrap">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                    <Border x:Name="border" 
                                                            BorderBrush="{TemplateBinding BorderBrush}" 
                                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                                            Background="{TemplateBinding Background}" 
                                                            SnapsToDevicePixels="True">
                                                        <ScrollViewer x:Name="PART_ContentHost" 
                                                                      Focusable="false" 
                                                                      HorizontalScrollBarVisibility="Hidden" 
                                                                      VerticalScrollBarVisibility="Hidden"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <!--<EventTrigger RoutedEvent="TextBox.MouseEnter">
                                                            <EventTrigger.Actions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <ColorAnimation Duration="0:0:0"
                                                                                        From="Transparent"
                                                                                        To="White"
                                                                                        Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger.Actions>
                                                        </EventTrigger>-->
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" TargetName="border" Value="White"/>
                                                        </Trigger>
                                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                                            <Setter Property="Background" Value="Transparent" TargetName="border"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Вопросы"
                                        x:Name="Question"
                                        Width="*"
                                        HeaderStyle="{StaticResource CenterDataGridColumnsHeaders}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button 
                                    Command="{Binding DataContext.QuestionCmd, 
                                RelativeSource={RelativeSource AncestorType={x:Type Window},
                                Mode=FindAncestor}}"
                                    CommandParameter="{Binding}">
                                <TextBlock Text="{Binding Question}"/>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="45" 
                                        Header="Да"
                                        CanUserResize="False"
                                        HeaderStyle="{StaticResource CenterDataGridColumnsHeaders}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Name="btnYes"
                                    Command="{Binding DataContext.YesCmd, 
                                RelativeSource={RelativeSource AncestorType={x:Type Window},
                                Mode=FindAncestor}}"
                                    CommandParameter="{Binding}">
                                <fa:ImageAwesome Height="12" Icon="Circle" Foreground="Green"/>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="63" 
                                        Header="Нет"
                                        CanUserResize="False"
                                        HeaderStyle="{StaticResource CenterDataGridColumnsHeaders}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Name="btnNo"
                                    Command="{Binding DataContext.NoCmd, 
                                RelativeSource={RelativeSource AncestorType={x:Type Window},
                                Mode=FindAncestor}}"
                                    CommandParameter="{Binding}">
                                <fa:ImageAwesome Height="12" Icon="CircleThin" Foreground="Red"/>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="90" 
                                        Header="Неизвестно"
                                        CanUserResize="False"
                                        HeaderStyle="{StaticResource CenterDataGridColumnsHeaders}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Name="btnDontKnow"
                                    Command="{Binding DataContext.DontKnowCmd, 
                                RelativeSource={RelativeSource AncestorType={x:Type Window},
                                Mode=FindAncestor}}"
                                    CommandParameter="{Binding}">
                                <fa:ImageAwesome Height="12" Icon="TimesCircle" Foreground="Yellow"/>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Время"
                                    Width="60"
                                    IsReadOnly="False"
                                    CanUserResize="False"
                                    HeaderStyle="{StaticResource CenterDataGridColumnsHeaders}"
                                    Binding="{Binding Time, StringFormat='mm:ss', Mode=OneWay}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Рейтинг участника"
                                    Width="140"
                                    IsReadOnly="False"
                                    CanUserResize="False"
                                    HeaderStyle="{StaticResource CenterDataGridColumnsHeaders}"
                                    Binding="{Binding Rating, Mode=OneWay}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <DockPanel Grid.Row="2" LastChildFill="True" Name="DoclPanelStatus">
            <DockPanel.Resources>
                <SolidColorBrush x:Key="Item.MouseOver.Background" Color="AliceBlue"/>
                <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Aquamarine"/>
                <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
                <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
                <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
                <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
                <SolidColorBrush x:Key="MyColor" Color="DarkRed"/>
            </DockPanel.Resources>
            <StackPanel Orientation="Horizontal">
                <StatusBar VerticalAlignment="Bottom" Background="White" BorderThickness="0, 1, 0, 0">
                    <StatusBarItem>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Text" Value="Победит быстрейший ум!"/>
                                    <Setter Property="Width" Value="211"/>
                                    <Setter Property="TextAlignment" Value="Center"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=MenuTriggered, Path=IsMouseOver}" Value="true">
                                            <Setter Property="Text" Value="Меню игры"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=TableName, Path=IsMouseOver}" Value="true">
                                            <Setter Property="Text" Value="Таблица участников игры"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=help, Path=IsHighlighted}" Value="true">
                                            <Setter Property="Text" Value="Меню игры: Справка"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=About, Path=IsHighlighted}" Value="true">
                                            <Setter Property="Text" Value="Меню игры: Справка -> О программе"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=File, Path=IsMouseOver}" Value="true">
                                            <Setter Property="Text" Value="Меню игры: Файл"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=Exitt, Path=IsHighlighted}" Value="true">
                                            <Setter Property="Text" Value="Меню игры: Файл -> Выход"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=WinnerTable, Path=IsMouseOver}" Value="true">
                                            <Setter Property="Text" Value="Таблица угадавших игроков"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StatusBarItem>
                </StatusBar>
                <Button Content="Список угадавших игроков"
                        Margin="0, 3, 0, 0"
                        Width="280"
                        Height="50"
                        FontSize="20"
                        FontWeight="DemiBold"
                        Visibility="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource HeightToVisibilityButtom}}"
                        Command="{Binding WinnersOpen}">
                </Button>
                <ItemsControl ItemsSource="{Binding Winners}" Name="WinnerTable" Margin="0, 3, 0, 0" Width="250" DockPanel.Dock="Left">
                    <ItemsControl.Style>
                        <Style TargetType="ItemsControl">
                            <Setter Property="Visibility" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource HeihtToVisibility}}"/>
                        </Style>
                    </ItemsControl.Style>
                    <ItemsControl.Template>
                        <ControlTemplate>
                            <Border BorderThickness="1, 1, 1, 0" BorderBrush="Black" CornerRadius="8, 8, 0, 0">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Label Content="Угадавшие участники игры: "
                                       FontSize="18"
                                       HorizontalContentAlignment="Center"
                                       VerticalContentAlignment="Center"
                                       BorderThickness="0, 0, 0, 1"
                                       BorderBrush="Black"
                                       Padding="0"
                                       Grid.Row="0"/>
                                    <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="1">
                                        <ItemsPresenter SnapsToDevicePixels="True"/>
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </ItemsControl.Template>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border BorderThickness="0, 0, 0, 1" BorderBrush="Black">
                                <TextBlock Text="{Binding StdWin, StringFormat='Угадал участник №{0}.'}" TextAlignment="Center"/>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>

            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                <Button Content="Перезапустить игру" Style="{StaticResource ResetGame}"
                    FontWeight="Bold" FontStretch="Normal" FontSize="15"
                    Command="{Binding ResetGame}"/>

                <Button Content="Закончить игру" Style="{StaticResource EndGame}"
                        FontWeight="Bold" 
                        FontStretch="Normal" 
                        FontSize="15"
                        Command="{Binding EndGame}"/>
            </StackPanel>
            <!--<ListBox ItemsSource="{Binding Winners}">
                <ListBox.Template>
                    <ControlTemplate>
                        <Border BorderThickness="1" BorderBrush="Black" CornerRadius="8">
                            <DockPanel>
                                <Grid DockPanel.Dock="Top">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Label Content="Угадавшие участники игры:" 
                                                   HorizontalContentAlignment="Center"
                                                   VerticalContentAlignment="Center"
                                                   BorderThickness="0, 0, 0, 1"
                                                   BorderBrush="Black"
                                                   Padding="0"/>
                                </Grid>
                                <ScrollViewer>
                                    <ItemsPresenter SnapsToDevicePixels="True"/>
                                </ScrollViewer>
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </ListBox.Template>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="BorderThickness" Value="0, 0, 0, 1"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" 
                                            BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                            Background="{TemplateBinding Background}" 
                                            Padding="{TemplateBinding Padding}" 
                                            SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource MyColor}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{x:Static SystemColors.ActiveCaptionBrush}"/>
                                            <Setter Property="BorderBrush" Value="Bisque"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="Cornsilk"/>
                                            <Setter Property="BorderBrush" Value="HotPink"/>
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding StdWin}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>-->

            <Viewbox Stretch="Uniform" StretchDirection="DownOnly" Name="ViewBoxStatus">
                <!--<TextBlock Text="{Binding IdRemoteStdWinner, NotifyOnTargetUpdated=True, TargetNullValue='Победитель не найден!'}"
                               FontSize="40"
                               Margin="2"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                          FillBehavior="HoldEnd"
                                                                          AutoReverse="True">
                                                    <ColorAnimationUsingKeyFrames.KeyFrames>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Black"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.2" Value="Black"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.3" Value="White"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.4" Value="Black"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.5" Value="White"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.6" Value="Black"/>
                                                    </ColorAnimationUsingKeyFrames.KeyFrames>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>-->
                <TextBlock Text="{Binding IdRemoteStdWinner, TargetNullValue='Игра запущена. Ждём ответов!'}" Name="TextBlockStatus">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="FontSize" Value="40"/>
                            <Setter Property="Visibility" Value="{Binding ActualWidth, ElementName=GuessYorselfMainWindow, Converter={StaticResource WidthToVisibility}}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsAnimation}" Value="true">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames FillBehavior="Stop"
                                                                              RepeatBehavior="0:0:3"
                                                                              Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                    <ColorAnimationUsingKeyFrames.KeyFrames>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Black"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.2" Value="Black"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.3" Value="White"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.4" Value="Black"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.5" Value="White"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.6" Value="Black"/>
                                                    </ColorAnimationUsingKeyFrames.KeyFrames>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsAnimationEndGame}" Value="true">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames FillBehavior="Stop"
                                                                RepeatBehavior="0:0:3"
                                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                    <ColorAnimationUsingKeyFrames.KeyFrames>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Black"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.2" Value="Black"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.3" Value="White"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.4" Value="Black"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.5" Value="White"/>
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.6" Value="Black"/>
                                                    </ColorAnimationUsingKeyFrames.KeyFrames>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <!--<TextBlock>
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontSize" Value="40"/>
                            <Setter Property="Margin" Value="2"/>
                            <Setter Property="Text" Value="{Binding IdRemoteStdWinner}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IdRemoteStdWinner}" Value="{x:Null}">
                                    <Setter Property="Text" Value="Игра начата. Ожидаем ответов!"/>
                                    <DataTrigger.EnterActions>
                                        <RemoveStoryboard BeginStoryboardName="BlinkAnimation"/>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard Name="BlinkAnimation">
                                            <Storyboard>
                                                <DoubleAnimation 
                                                    Duration="0:0:0.1"
                                                    From="0"
                                                    To="1"
                                                    RepeatBehavior="0:0:3"
                                                    AutoReverse="True"
                                                    FillBehavior="Stop"
                                                    Storyboard.TargetProperty="Opacity"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>-->
            </Viewbox>
        </DockPanel>
    </Grid>
</Window>